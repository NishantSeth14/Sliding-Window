class Solution {
public:
    int longestSubstring(string s, int k) {
        int n = s.size();
        unordered_map<char,int> map;
        for(char i:s){
            map[i]++;
        }
        int l=0;
        while(l < n && map[s[l]] >= k){
            l++;
        }
        if(l > n-1){
            return l;
        }
        int lst1 = longestSubstring(s.substr(0,l),k);
        while(l < n && map[s[l]] < k){
            l++;
        }
        int lst2 = (l < n) ? longestSubstring(s.substr(l), k) : 0;
        return max(lst1,lst2);
    }
};
